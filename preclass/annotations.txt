mkdir encrypt-decrypt-file
npm init -y 
node -v 
npm i -D nodemon 
package.json 
    add script 

mkdir src 
touch index.js 
touch src/app.js
    all 
index.js 
await app.run()

show file 

touch src/CryptoHelper
    setup
    constructor
index.js 
    call CryptoHelper

CryptoHelper
    createEncryptedFile
index.js 
    call createEncryptedFile
CryptoHelper
    decriptFile
index.js 
    call decriptFile

show decrypt on website
    https://www.devglan.com/online-tools/aes-encryption-decryption

touch src/customFSPromises 
    constructor() {}
    writeFile
        all 
touch src/constants 
        all 
customFSPromises
    configure 
        only writeFileOptions
        return configuration
index.js 
    call CustomFsPromises

touch src/decorator 
    decorateModule all 
index.js 
    call decorator

test -> it show getting encrypted file and file 

decorator
    readFile
    add readfile on config 
test -> it show getting plain text file and file 



openssl list -cipher-algorithms
https://www.devglan.com/online-tools/aes-encryption-decryption
https://encode-decode.com/aes-192-ecb-encrypt-online/
https://whatis.techtarget.com/definition/initialization-vector-IV

AES works in 2 modes - CBC and ECB mode.

CBC (Cipher Block Chaining) requires Initialization Vector(IV) to make each message unique.Using IV we randomize the encryption of similar blocks. So any identical plain text blocks will be encrypted into disimmilar cipher text blocks

ECB(Electronic Code Book) encryption mode does not need the IV for encryption. The input plain text will be divided into blocks and each block will be encrypted with the key provided and hence identical plain text blocks are encrypted into identical cipher text blocks.
